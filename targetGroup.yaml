# Create Elastic load balancer and configurations, AutoScaling Group and configurations and install Apache Server on launch of instances
Parameters:
  myVPC:
    Description: Select One VPC available in your existing account
    Type: AWS::EC2::VPC::Id
    Default: "<Your VPC ID>"
  publicSubnets:
    Type: CommaDelimitedList
    Description: The list of SubnetIds in your VPC
    Default: <subnet1 id>, <subnet2 id>
  keyName:
    Description: "To connect to EC2 instances via SSH"
    Type: AWS::EC2::KeyPair::KeyName
    Default: "<Your KeyPair Name>"
Resources: 
  ELBTargetGroup:
   Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
   Properties:
     HealthCheckIntervalSeconds: 6
     HealthCheckTimeoutSeconds: 5
     HealthyThresholdCount: 2
     Port: 80
     Protocol: HTTP
     UnhealthyThresholdCount: 2
     VpcId: !Ref myVPC
     TargetType: instance
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "ELBTraffic"
      GroupDescription: "Enable HTTP access and SSH on the inbound port for ELB"
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ELBSecurityGroup
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets: !Ref publicSubnets
      SecurityGroups: 
        - !Ref ELBSecurityGroup
  ElbListener:
   Type: 'AWS::ElasticLoadBalancingV2::Listener'
   Properties:
     DefaultActions:
       - Type: forward
         TargetGroupArn: !Ref ELBTargetGroup
     LoadBalancerArn: !Ref ElasticLoadBalancer
     Port: '80'
     Protocol: HTTP
  AsgConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref ELBSecurityGroup
      ImageId: "ami-0df24e148fdb9f1d8"
      KeyName: !Ref keyName
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            systemctl start httpd
            systemctl enable httpd
  AsgGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - ELBTargetGroup
      - ElasticLoadBalancer
    Properties:
      VPCZoneIdentifier: !Ref publicSubnets
      LaunchConfigurationName: !Ref AsgConfig
      MinSize: '2'
      MaxSize: '10'
      DesiredCapacity: '2'
      HealthCheckGracePeriod: 300
      MaxInstanceLifetime: 2592000
      TargetGroupARNs:
        - !Ref ELBTargetGroup